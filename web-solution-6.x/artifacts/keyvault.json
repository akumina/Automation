{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Key vault name."
      }
    },
    "webName": {
      "type": "string",
      "metadata": {
        "description": "Web app name."
      }
    },
    "headlessWebName": {
      "type": "string",
      "metadata": {
        "description": "headless web app name."
      }
    },
    "keyVaultSku": {
      "type": "string",
      "metadata": {
        "description": "Key vault pricing tier."
      }
    },
    "keysPermissions": {
      "type": "array",
      "defaultValue": [ "Get", "List" ],
      "metadata": {
        "description": "Permissions to grant user to keys in the vault. Valid values are: all, create, import, update, get, list, delete, backup, restore, encrypt, decrypt, wrapkey, unwrapkey, sign, and verify."
      }
    },
    "secretsPermissions": {
      "type": "array",
      "defaultValue": [ "Get", "List" ],
      "metadata": {
        "description": "Permissions to grant user to secrets in the vault. Valid values are: all, get, set, list, and delete."
      }
    },
    "secretValueObject": {
      "type": "object",
      "metadata": {
        "description": "Key vault secret for akumina application."
      }
    },
    "headlessSecretValueObject": {
      "type": "object",
      "metadata": {
        "description": "Key vault secret for akumina headless application."
      }
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "Virtual network name."
      }
    },
    "snetName": {
      "type": "string",
      "metadata": {
        "description": "Data subnet name."
      }
    },
    "storageAccountKey": {
      "type": "string",
      "metadata": {
        "description": "Azure storage account key."
      }
    },
    "cosmosAccountKey": {
      "type": "string",
      "metadata": {
        "description": "CosmosDB (SQL API) account key."
      }
    },
    "redisAccountKey": {
      "type": "string",
      "metadata": {
        "description": "Azure Redis cache key."
      }
    },
    "searchAccountKey": {
      "type": "string",
      "metadata": {
        "description": "Cognitive search key."
      }
    }
  },
  "variables": {
    "secretName": "appmanger",
    "headlessSecretName": "headless",
    "privateDnsZonesName": "privatelink.vaultcore.azure.net",
    "privateEnpointsName": "[concat('p-', parameters('keyVaultName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2022-11-01",
      "name": "[parameters('keyVaultName')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "KeyVault"
      },
      "properties": {
        "enabledForDeployment": false,
        "enabledForTemplateDeployment": false,
        "enabledForVolumeEncryption": false,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90,
        "enablePurgeProtection": true,
        "publicNetworkAccess": "Disabled",
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.Web/sites', parameters('webName')), '2021-02-01', 'full').identity.principalId]",
            "permissions": {
              "keys": "[parameters('keysPermissions')]",
              "secrets": "[parameters('secretsPermissions')]"
            }
          },
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.Web/sites', parameters('headlessWebName')), '2021-02-01', 'full').identity.principalId]",
            "permissions": {
              "keys": "[parameters('keysPermissions')]",
              "secrets": "[parameters('secretsPermissions')]"
            }
          }
        ],
        "sku": {
          "name": "[parameters('keyVaultSku')]",
          "family": "A"
        }
      },
      "resources": [
        {
          "type": "secrets",
          "name": "[variables('secretName')]",
          "apiVersion": "2022-11-01",
          "tags": {
            "displayName": "secret"
          },
          "properties": {
            "value": "[replace(replace(replace(replace(string(parameters('secretValueObject')),'@StorageKey',parameters('storageAccountKey')),'@DbKey',parameters('cosmosAccountKey')),'@SearchKey',parameters('searchAccountKey')),'@RedisKey',parameters('redisAccountKey'))]"
          },
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
          ]
        },
        {
          "type": "secrets",
          "name": "[variables('headlessSecretName')]",
          "apiVersion": "2022-11-01",
          "tags": {
            "displayName": "secret"
          },
          "properties": {
            "value": "[replace(replace(replace(replace(string(parameters('headlessSecretValueObject')),'@StorageKey',parameters('storageAccountKey')),'@DbKey',parameters('cosmosAccountKey')),'@SearchKey',parameters('searchAccountKey')),'@RedisKey',parameters('redisAccountKey'))]"
          },
          "dependsOn": [
            "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
          ]
        }
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2018-09-01",
      "name": "[variables('privateDnsZonesName')]",
      "location": "global"
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2018-09-01",
      "name": "[format('{0}/{1}', variables('privateDnsZonesName'), format('{0}-link', variables('privateDnsZonesName')))]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZonesName'))]"
      ],
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2022-09-01",
      "name": "[variables('privateEnpointsName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
      ],
      "properties": {
        "privateLinkServiceConnections": [
          {
            "name": "[variables('privateEnpointsName')]",
            "id": "[concat(resourceId('Microsoft.Network/privateEndpoints', variables('privateEnpointsName')), concat('/privateLinkServiceConnections/', variables('privateEnpointsName')))]",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
              "groupIds": [
                "vault"
              ],
              "privateLinkServiceConnectionState": {
                "status": "Approved",
                "description": "Auto-Approved",
                "actionsRequired": "None"
              }
            }
          }
        ],
        "customNetworkInterfaceName": "[concat(variables('privateEnpointsName'), '-nic')]",
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('snetName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2022-09-01",
      "name": "[concat(variables('privateEnpointsName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEnpointsName'))]",
        "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZonesName'))]"
      ],
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "privatelink-search-windows-net",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZonesName'))]"
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "keyVaultSecretUri": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), variables('secretName'))).secretUri]"
    },
    "headlessKeyVaultSecretUri": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('keyVaultName'), variables('headlessSecretName'))).secretUri]"
    }
  }
}
