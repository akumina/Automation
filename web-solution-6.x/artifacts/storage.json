 {
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Azure Storage account anme."
            }
        },
        "storageAccountSku": {
            "type": "string",
            "metadata": {
                "description": "Azure storage account pricing tier (Standard is required for Blob, Queue, Table and Fileshare)."
            }
        },
        "fileShareName": {
            "type": "string",
            "metadata": {
                "description": "File share name."
            }
        },
        "vnetName": {
            "type": "string",
            "metadata": {
                "description": "Virtual network name."
            }
        },
        "snetName": {
            "type": "string",
            "metadata": {
                "description": "Data subnet name."
            }
        },
        "storagePublicDomainSuffixName": {
            "type": "string",
            "metadata": {
                "description": "Storage public domain suffix name."
            }
        }
    },
    "variables": {
        "privateEnpointsBlobName": "[concat('p-', parameters('storageAccountName'),'-blob')]",
        "privateDnsZonesBlobName": "[concat('privatelink.blob.', parameters('storagePublicDomainSuffixName'))]",
        "privateEnpointsTableName": "[concat('p-', parameters('storageAccountName'),'-table')]",
        "privateDnsZonesTableName": "[concat('privatelink.table.', parameters('storagePublicDomainSuffixName'))]",
        "privateEnpointsQueueName": "[concat('p-', parameters('storageAccountName'),'-queue')]",
        "privateDnsZonesQueueName": "[concat('privatelink.queue.', parameters('storagePublicDomainSuffixName'))]",
        "privateEnpointsFileName": "[concat('p-', parameters('storageAccountName'),'-file')]",
        "privateDnsZonesFileName": "[concat('privatelink.file.', parameters('storagePublicDomainSuffixName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-09-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageAccountSku')]"
            },
            "kind": "StorageV2",
            "properties": {
                "azureFilesIdentityBasedAuthentication": {
                    "directoryServiceOptions": "None"
                },
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "publicNetworkAccess": "Enabled",
                "allowCrossTenantReplication": false,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "table": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "queue": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[variables('privateDnsZonesBlobName')]",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[variables('privateDnsZonesTableName')]",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[variables('privateDnsZonesQueueName')]",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[variables('privateDnsZonesFileName')]",
            "location": "global"
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[format('{0}/{1}', variables('privateDnsZonesBlobName'), format('{0}-link', variables('privateDnsZonesBlobName')))]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZonesBlobName'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[format('{0}/{1}', variables('privateDnsZonesTableName'), format('{0}-link', variables('privateDnsZonesTableName')))]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZonesTableName'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[format('{0}/{1}', variables('privateDnsZonesQueueName'), format('{0}-link', variables('privateDnsZonesQueueName')))]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZonesQueueName'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[format('{0}/{1}', variables('privateDnsZonesFileName'), format('{0}-link', variables('privateDnsZonesFileName')))]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZonesFileName'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('privateEnpointsBlobName'), '/default')]",

            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEnpointsBlobName'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZonesBlobName'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "[replace(variables('privateDnsZonesBlobName'),'-','.')]",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZonesBlobName'))]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('privateEnpointsTableName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEnpointsTableName'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZonesTableName'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "[replace(variables('privateDnsZonesTableName'),'-','.')]",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZonesTableName'))]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('privateEnpointsQueueName'), '/default')]",

            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEnpointsQueueName'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZonesQueueName'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "[replace(variables('privateDnsZonesQueueName'),'-','.')]",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZonesQueueName'))]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2022-09-01",
            "name": "[concat(variables('privateEnpointsFileName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEnpointsFileName'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZonesFileName'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "[replace(variables('privateDnsZonesFileName'),'-','.')]",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZonesFileName'))]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2022-09-01",
            "name": "[variables('privateEnpointsBlobName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[variables('privateEnpointsBlobName')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                            "groupIds": [
                                "blob"
                            ]
                        }
                    }
                ],
                "customNetworkInterfaceName": "[concat(variables('privateEnpointsBlobName'), '-nic')]",
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('snetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2022-09-01",
            "name": "[variables('privateEnpointsTableName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[variables('privateEnpointsTableName')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                            "groupIds": [
                                "table"
                            ]
                        }
                    }
                ],
                "customNetworkInterfaceName": "[concat(variables('privateEnpointsTableName'), '-nic')]",
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('snetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2022-09-01",
            "name": "[variables('privateEnpointsQueueName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[variables('privateEnpointsQueueName')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                            "groupIds": [
                                "queue"
                            ]
                        }
                    }
                ],
                "customNetworkInterfaceName": "[concat(variables('privateEnpointsQueueName'), '-nic')]",
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('snetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2022-09-01",
            "name": "[variables('privateEnpointsFileName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[variables('privateEnpointsFileName')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                            "groupIds": [
                                "file"
                            ]
                        }
                    }
                ],
                "customNetworkInterfaceName": "[concat(variables('privateEnpointsFileName'), '-nic')]",
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('snetName'))]"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccountName'), '/default/akcloud')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccountName'), '/default/', parameters('fileShareName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccountName'), '/default/contentdistribution')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccountName'), '/default/activity-stream')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccountName'), '/default/calendar-events')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccountName'), '/default/sharepoint-events')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccountName'), '/default/notification-digest')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccountName'), '/default/user-changes')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccountName'), '/default/tasks')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccountName'), '/default/form-events')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ]
        }
    ]
}
